{
  "version": 3,
  "sources": ["../../@haxtheweb/simple-icon/lib/simple-icon-button-lite.js", "../../@haxtheweb/scroll-button/scroll-button.js"],
  "sourcesContent": ["/**\n * Copyright 2020 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, css, LitElement } from \"lit\";\nimport \"./simple-icons.js\";\nimport \"./simple-icon-lite.js\";\n\n/**\n *\n * @class SimpleIconButtonBehaviors\n */\nexport const SimpleIconButtonBehaviors = function (SuperClass) {\n  return class extends SuperClass {\n    constructor() {\n      super();\n      this.ariaLabelledby = \"\";\n      this.controls = \"\";\n      this.disabled = false;\n      this.form = \"\";\n      this.label = \"\";\n      this.fieldName = \"\";\n      this.type = \"\";\n      this.value = \"\";\n      this.icon = \"\";\n    }\n\n    static get styles() {\n      return [\n        ...[super.styles || []],\n        css`\n          :host([hidden]) {\n            display: none;\n          }\n          :host([icon=\"\"]) simple-icon-lite {\n            display: none;\n          }\n          :host {\n            display: inline-flex;\n            align-items: center;\n            justify-content: center;\n            position: relative;\n            vertical-align: middle;\n            border-radius: var(--simple-icon-button-border-radius, 50%);\n            background-color: var(\n              --simple-icon-button-background-color,\n              transparent\n            );\n            padding: 0;\n            margin: 0;\n            color: inherit;\n          }\n          button {\n            color: inherit;\n            cursor: pointer;\n            opacity: var(--simple-icon-button-opacity, 1);\n            border: var(--simple-icon-button-border, 0);\n            border-radius: var(--simple-icon-button-border-radius, 50%);\n            background-color: var(\n              --simple-icon-button-background-color,\n              transparent\n            );\n            padding: var(--simple-icon-button-padding, 0px);\n            margin: 0px;\n            width: 100%;\n            height: 100%;\n          }\n          button[aria-pressed] {\n            opacity: var(--simple-icon-button-toggled-opacity, 1);\n            --simple-icon-button-border: var(\n              --simple-icon-toggled-button-border\n            );\n            --simple-icon-color: var(--simple-icon-button-toggled-color);\n            --simple-icon-button-background-color: var(\n              --simple-icon-button-toggled-background-color\n            );\n          }\n          button:focus,\n          button:hover {\n            opacity: var(--simple-icon-button-focus-opacity, 0.8);\n            --simple-icon-button-border: var(--simple-icon-button-focus-border);\n            --simple-icon-color: var(--simple-icon-button-focus-color);\n            --simple-icon-button-background-color: var(\n              --simple-icon-button-focus-background-color\n            );\n          }\n          button:disabled,\n          button[disabled] {\n            opacity: var(--simple-icon-button-disabled-opacity, 0.5);\n            --simple-icon-button-border: var(\n              --simple-icon-button-disabled-border\n            );\n            --simple-icon-color: var(--simple-icon-button-disabled-color);\n            --simple-icon-button-background-color: var(\n              --simple-icon-button-disabled-background-color\n            );\n            cursor: not-allowed;\n          }\n\n          simple-icon-lite {\n            color: inherit;\n            height: calc(\n              var(--simple-icon-height, 24px) - 2 *\n                var(--simple-icon-button-padding, 0px)\n            );\n            width: calc(\n              var(--simple-icon-width, 24px) - 2 *\n                var(--simple-icon-button-padding, 0px)\n            );\n          }\n        `,\n      ];\n    }\n\n    // render function\n    render() {\n      return html`\n        <button\n          ?autofocus=\"${this.autofocus}\"\n          aria-labelledby=\"${this.ariaLabelledby}\"\n          .aria-pressed=\"${this.toggles || this.toggled\n            ? \"true\"\n            : this.toggles\n              ? \"false\"\n              : undefined}\"\n          controls=\"${this.controls}\"\n          part=\"button\"\n          ?disabled=\"${this.disabled}\"\n          form=\"${this.form}\"\n          label=\"${this.label}\"\n          aria-label=\"${this.label}\"\n          name=\"${this.fieldName}\"\n          .type=\"${this.type}\"\n          value=\"${this.value}\"\n        >\n          <simple-icon-lite\n            icon=\"${this.icon}\"\n            part=\"icon\"\n            ?no-colorize=\"${this.noColorize}\"\n          ></simple-icon-lite>\n          <slot></slot>\n        </button>\n      `;\n    }\n\n    // properties available to the custom element for data binding\n    static get properties() {\n      return {\n        ...super.properties,\n        autofocus: {\n          type: Boolean,\n        },\n        ariaLabelledby: {\n          attribute: \"aria-labelledby\",\n          type: String,\n        },\n        controls: {\n          type: String,\n        },\n        disabled: {\n          type: Boolean,\n        },\n        fieldName: {\n          attribute: \"field-name\",\n          type: String,\n        },\n        form: {\n          type: String,\n        },\n        icon: {\n          type: String,\n          reflect: true,\n        },\n        label: {\n          type: String,\n        },\n        type: {\n          type: String,\n        },\n        value: {\n          type: String,\n          reflect: true,\n        },\n        toggles: {\n          type: Boolean,\n          reflect: true,\n        },\n        toggled: {\n          type: Boolean,\n          reflect: true,\n        },\n      };\n    }\n  };\n};\n/**\n * `simple-icon`\n * `Render an SVG based icon`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @extends LitElement\n * @extends SimpleIconButtonBehaviors\n * @demo demo/button-lite.html\n * @element simple-icon\n */\nclass SimpleIconButtonLite extends SimpleIconButtonBehaviors(LitElement) {\n  /**\n   * This is a convention, not the standard\n   */\n  static get tag() {\n    return \"simple-icon-button-lite\";\n  }\n  constructor() {\n    super();\n    this.type = \"button\";\n  }\n}\ncustomElements.define(SimpleIconButtonLite.tag, SimpleIconButtonLite);\nexport { SimpleIconButtonLite };\n", "/**\n * Copyright 2019 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit\";\nimport \"@haxtheweb/simple-icon/lib/simple-icons.js\";\nimport \"@haxtheweb/simple-icon/lib/simple-icon-button-lite.js\";\n/**\n * `scroll-button`\n * `button to scroll to an area or back to top`\n * @demo demo/index.html\n * @element scroll-button\n */\nclass ScrollButton extends LitElement {\n  constructor() {\n    super();\n    this.icon = \"icons:expand-less\";\n    this.t = {\n      backToTop: \"Back to top\",\n    };\n    globalThis.dispatchEvent(\n      new CustomEvent(\"i18n-manager-register-element\", {\n        detail: {\n          context: this,\n          namespace: \"scroll-button\",\n          localesPath:\n            new URL(\"./locales/scroll-button.es.json\", import.meta.url).href +\n            \"/../\",\n          updateCallback: \"render\",\n          locales: [\"es\"],\n        },\n      }),\n    );\n    this._label = this.t.backToTop;\n    this.label = \"\";\n    this.position = \"top\";\n    import(\"@haxtheweb/simple-tooltip/simple-tooltip.js\");\n  }\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"scroll-button\";\n  }\n  //styles function\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n          --scroll-button-z-index: 99;\n          z-index: var(--scroll-button-z-index);\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        simple-icon-button-lite {\n          background-color: var(\n            --scroll-button-background-color,\n            rgba(0, 0, 0, 0.6)\n          );\n          color: var(--scroll-button-color, white);\n        }\n\n        simple-icon-button-lite:hover,\n        simple-icon-button-lite:active,\n        simple-icon-button-lite:focus {\n          color: var(--scroll-button-background-color, rgba(0, 0, 0, 1));\n          background-color: var(--scroll-button-color, white);\n        }\n\n        simple-tooltip {\n          --simple-tooltip-background: var(\n            --scroll-button-tooltip-background-color,\n            #000000\n          );\n          --simple-tooltip-opacity: 1;\n          --simple-tooltip-text-color: var(\n            --scroll-button-tooltip-color,\n            #ffffff\n          );\n          --simple-tooltip-delay-in: 0;\n          --simple-tooltip-border-radius: 0;\n        }\n      `,\n    ];\n  }\n  updated(changedProperties) {\n    if (super.updated) {\n      super.updated(changedProperties);\n    }\n    changedProperties.forEach((oldvalue, propName) => {\n      // if other developer defined label, don't translate it\n      if (propName === \"t\" && this.label === \"\") {\n        this._label = this.t.backToTop;\n      }\n      if (propName === \"label\" && this.label !== \"\") {\n        this._label = this.label;\n      }\n    });\n  }\n  // render function\n  render() {\n    return html` <simple-icon-button-lite\n        @click=\"${this.scrollEvent}\"\n        id=\"btn\"\n        icon=\"${this.icon}\"\n        label=\"${this._label}\"\n      ></simple-icon-button-lite>\n      <simple-tooltip for=\"btn\" position=\"${this.position}\" offset=\"14\">\n        ${this._label}\n      </simple-tooltip>`;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n      target: {\n        type: Object,\n      },\n      icon: {\n        type: String,\n      },\n      label: {\n        type: String,\n      },\n      _label: {\n        type: String,\n      },\n      position: {\n        type: String,\n      },\n      t: {\n        type: Object,\n      },\n    };\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  scrollEvent(e) {\n    if (this.target) {\n      this.target.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n        inline: \"nearest\",\n      });\n    } else {\n      globalThis.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\",\n      });\n    }\n  }\n}\ncustomElements.define(ScrollButton.tag, ScrollButton);\nexport { ScrollButton };\n"],
  "mappings": "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",
  "names": []
}

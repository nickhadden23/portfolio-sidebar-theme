{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "`simple-cta`\n`Simple call to action button`",
      "summary": "",
      "path": "simple-cta.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "Template return function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "haxHooks",
          "description": "Implements haxHooks to tie into life-cycle if hax exists.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 2
            },
            "end": {
              "line": 361,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "haxeditModeChanged",
          "description": "Set a flag to test if we should block link clicking on the entire card\notherwise when editing in hax you can't actually edit it bc its all clickable.\nif editMode goes off this helps ensure we also become clickable again",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 2
            },
            "end": {
              "line": 369,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clickCard",
          "description": "special support for HAX since the whole card is selectable",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "haxactiveElementChanged",
          "description": "double-check that we are set to inactivate click handlers\nthis is for when activated in a duplicate / adding new content state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            },
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "firstUpdated",
          "description": "LitElement ready",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updated",
          "description": "LitElement life cycle - property changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 402,
              "column": 2
            },
            "end": {
              "line": 411,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        },
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 412,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "SimpleCta"
    }
  ]
}
